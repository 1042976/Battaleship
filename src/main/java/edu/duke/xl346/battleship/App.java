/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.xl346.battleship;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.io.Reader;

public class App {
  final TextPlayer player1;
  final TextPlayer player2;

  public App(TextPlayer player1, TextPlayer player2){
    this.player1 = player1;
    this.player2 = player2;
  }
  /**
   *This method calls doPlacementPhase of two players relatively
   */
  public void doPlacementPhase() throws IOException, InterruptedException {
    player1.doPlacementPhase();
    player2.doPlacementPhase();
  }

  /**
   *This method  lets player1 play a turn, then see if player 2 has lost. Then let player 2 play a turn and see if player 1 has lost.It should repeat this until one player has lost, then report the outcome.
   */  
  public void doAttackingPhase() throws IOException{
    do{
      player1.playOneTurn(player2.theBoard, player2.view, player2.name);
      if(player2.ifHasLost()){
        player1.out.println("Player " + player1.name + " win!");
        return;
      }
      player2.playOneTurn(player1.theBoard, player1.view, player1.name);
      if(player1.ifHasLost()){
        player2.out.println("Player " + player2.name + " win!");
        return;
      }
    } while (true);
    
  }
  /**
   * pick the mode of game : human-human, computer-computer, human-computer, computer human;
   * 
   */
  public void selectMode() throws IOException{
    player1.selectMode();
    player2.selectMode();
  }
  public static void main(String[] args) throws IOException, InterruptedException {
    Board<Character> b1 = new BattleShipBoard<Character>(10, 20, 'X');
    Board<Character> b2 = new BattleShipBoard<Character>(10, 20, 'X');
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    V2ShipFactory factory = new V2ShipFactory();
    TextPlayer p1 = new TextPlayer("A", b1, input, System.out, factory);
    TextPlayer p2 = new TextPlayer("B", b2, input, System.out, factory);
    App app = new App(p1, p2);
    app.selectMode();
    app.doPlacementPhase();
    app.doAttackingPhase();
    System.exit(0);
  }

}













